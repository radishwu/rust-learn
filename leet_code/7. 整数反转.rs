// https://leetcode.cn/problems/reverse-integer/
// 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。
// 如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。
// 假设环境不允许存储 64 位整数（有符号或无符号）。

// 示例 1：
// 输入：x = 123
// 输出：321

// 示例 2：
// 输入：x = -123
// 输出：-321

// 示例 3：
// 输入：x = 120
// 输出：21

// 示例 4：
// 输入：x = 0
// 输出：0

impl Solution {
    pub fn reverse(x: i32) -> i32 {
        x.abs()//计算绝对值
        .to_string()//转为string类型
        .chars()//转为字节数组
        .rev()//反转字节数组
        .collect::<String>()//组合成新的string
        .parse::<i32>()//转换为i32类型
        .unwrap_or(0)//如果错误就输出0 
        * x.signum()//根据正负返回数字，0返回0，正数返回1，负数返回-1
    }
}